%!PS-Adobe-2.0
%%Title: times_summary.ps
%%Creator: gnuplot 5.0 patchlevel 4
%%CreationDate: Wed Mar 15 16:18:58 2017
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape true def
/Level1 false def
/Level3 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -66 def
/dl1 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 554 50 lineto 554 770 lineto 50 770 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 5.1 (Oct 2015)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Classic Line colors (version 5.0)
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default dash patterns (version 5.0)
/LTB {BL [] LCb DL} def
/LTw {PL [] 1 setgray} def
/LTb {PL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [2 dl1 3 dl2] LC1 DL} def
/LT2 {PL [1 dl1 1.5 dl2] LC2 DL} def
/LT3 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC3 DL} def
/LT4 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [4 dl1 2 dl2] LC5 DL} def
/LT6 {PL [1.5 dl1 1.5 dl2 1.5 dl1 1.5 dl2 1.5 dl1 6 dl2] LC6 DL} def
/LT7 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC8 DL} def
/SL {[] 0 setdash} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
dup 2 lt
	{/InterpretLevel1 true def
	 /InterpretLevel3 false def}
	{/InterpretLevel1 Level1 def
	 2 gt
	    {/InterpretLevel3 Level3 def}
	    {/InterpretLevel3 false def}
	 ifelse }
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
%
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {textshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     textshow 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (times_summary.ps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 5.0 patchlevel 4)
  /Author (nh9632)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Wed Mar 15 16:18:58 2017)
  /DOCINFO pdfmark
end
} ifelse
%
% Support for boxed text - Ethan A Merritt May 2005
%
/InitTextBox { userdict /TBy2 3 -1 roll put userdict /TBx2 3 -1 roll put
           userdict /TBy1 3 -1 roll put userdict /TBx1 3 -1 roll put
	   /Boxing true def } def
/ExtendTextBox { Boxing
    { gsave dup false charpath pathbbox
      dup TBy2 gt {userdict /TBy2 3 -1 roll put} {pop} ifelse
      dup TBx2 gt {userdict /TBx2 3 -1 roll put} {pop} ifelse
      dup TBy1 lt {userdict /TBy1 3 -1 roll put} {pop} ifelse
      dup TBx1 lt {userdict /TBx1 3 -1 roll put} {pop} ifelse
      grestore } if } def
/PopTextBox { newpath TBx1 TBxmargin sub TBy1 TBymargin sub M
               TBx1 TBxmargin sub TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy1 TBymargin sub L closepath } def
/DrawTextBox { PopTextBox stroke /Boxing false def} def
/FillTextBox { gsave PopTextBox 1 1 1 setrgbcolor fill grestore /Boxing false def} def
0 0 0 0 InitTextBox
/TBxmargin 20 def
/TBymargin 20 def
/Boxing false def
/textshow { ExtendTextBox Gshow } def
%
% redundant definitions for compatibility with prologue.ps older than 5.0.2
/LTB {BL [] LCb DL} def
/LTb {PL [] LCb DL} def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 200 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {gsave BackgroundColor C clippath fill grestore} if
1.000 UL
LTb
LCb setrgbcolor
860 878 M
63 0 V
5702 0 R
-63 0 V
stroke
740 878 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 0)]
] -66.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
860 1662 M
63 0 V
5702 0 R
-63 0 V
stroke
740 1662 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 5)]
] -66.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
860 2446 M
63 0 V
5702 0 R
-63 0 V
stroke
740 2446 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 10)]
] -66.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
860 3231 M
63 0 V
5702 0 R
-63 0 V
stroke
740 3231 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 15)]
] -66.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
860 4015 M
63 0 V
5702 0 R
-63 0 V
stroke
740 4015 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 20)]
] -66.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
860 4799 M
63 0 V
5702 0 R
-63 0 V
stroke
740 4799 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 25)]
] -66.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
1352 878 M
0 63 V
0 3858 R
0 -63 V
stroke
1352 758 M
currentpoint gsave translate 45 rotate 0 0 moveto
[ [(Helvetica) 200.0 0.0 true true 0 (i O0)]
] -66.7 MRshow
grestore
1.000 UL
LTb
LCb setrgbcolor
1915 878 M
0 63 V
0 3858 R
0 -63 V
stroke
1915 758 M
currentpoint gsave translate 45 rotate 0 0 moveto
[ [(Helvetica) 200.0 0.0 true true 0 (i O2)]
] -66.7 MRshow
grestore
1.000 UL
LTb
LCb setrgbcolor
2477 878 M
0 63 V
0 3858 R
0 -63 V
stroke
2477 758 M
currentpoint gsave translate 45 rotate 0 0 moveto
[ [(Helvetica) 200.0 0.0 true true 0 (i O3)]
] -66.7 MRshow
grestore
1.000 UL
LTb
LCb setrgbcolor
3039 878 M
0 63 V
0 3858 R
0 -63 V
stroke
3039 758 M
currentpoint gsave translate 45 rotate 0 0 moveto
[ [(Helvetica) 200.0 0.0 true true 0 (i O2 xH)]
] -66.7 MRshow
grestore
1.000 UL
LTb
LCb setrgbcolor
3602 878 M
0 63 V
0 3858 R
0 -63 V
stroke
3602 758 M
currentpoint gsave translate 45 rotate 0 0 moveto
[ [(Helvetica) 200.0 0.0 true true 0 (i O3 xH)]
] -66.7 MRshow
grestore
1.000 UL
LTb
LCb setrgbcolor
4164 878 M
0 63 V
0 3858 R
0 -63 V
stroke
4164 758 M
currentpoint gsave translate 45 rotate 0 0 moveto
[ [(Helvetica) 200.0 0.0 true true 0 (g)]
] -66.7 MRshow
grestore
1.000 UL
LTb
LCb setrgbcolor
4727 878 M
0 63 V
0 3858 R
0 -63 V
stroke
4727 758 M
currentpoint gsave translate 45 rotate 0 0 moveto
[ [(Helvetica) 200.0 0.0 true true 0 (g O2)]
] -66.7 MRshow
grestore
1.000 UL
LTb
LCb setrgbcolor
5289 878 M
0 63 V
0 3858 R
0 -63 V
stroke
5289 758 M
currentpoint gsave translate 45 rotate 0 0 moveto
[ [(Helvetica) 200.0 0.0 true true 0 (g Of)]
] -66.7 MRshow
grestore
1.000 UL
LTb
LCb setrgbcolor
5852 878 M
0 63 V
0 3858 R
0 -63 V
stroke
5852 758 M
currentpoint gsave translate 45 rotate 0 0 moveto
[ [(Helvetica) 200.0 0.0 true true 0 (g O2 nat)]
] -66.7 MRshow
grestore
1.000 UL
LTb
LCb setrgbcolor
6414 878 M
0 63 V
0 3858 R
0 -63 V
stroke
6414 758 M
currentpoint gsave translate 45 rotate 0 0 moveto
[ [(Helvetica) 200.0 0.0 true true 0 (g Of nat)]
] -66.7 MRshow
grestore
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTB
LCb setrgbcolor
860 4799 N
860 878 L
5765 0 V
0 3921 V
-5765 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
LCb setrgbcolor
160 2838 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Helvetica) 200.0 0.0 true true 0 (time / sec)]
] -66.7 MCshow
grestore
LTb
% Begin plot #1
2.000 UL
LTb
0.58 0.00 0.83 C /Helvetica findfont 200 scalefont setfont
/vshift -66 def
0.500 1001 878 141 3411 BoxColFill
1001 878 N
0 3410 V
140 0 V
0 -3410 V
-140 0 V
Z stroke
0.500 1563 878 142 1386 BoxColFill
1563 878 N
0 1385 V
141 0 V
0 -1385 V
-141 0 V
Z stroke
0.500 2125 878 142 1408 BoxColFill
2125 878 N
0 1407 V
141 0 V
0 -1407 V
-141 0 V
Z stroke
0.500 2688 878 142 1170 BoxColFill
2688 878 N
0 1169 V
141 0 V
0 -1169 V
-141 0 V
Z stroke
0.500 3250 878 142 1183 BoxColFill
3250 878 N
0 1182 V
141 0 V
0 -1182 V
-141 0 V
Z stroke
0.500 3813 878 141 2718 BoxColFill
3813 878 N
0 2717 V
140 0 V
0 -2717 V
-140 0 V
Z stroke
0.500 4375 878 142 1650 BoxColFill
4375 878 N
0 1649 V
141 0 V
0 -1649 V
-141 0 V
Z stroke
0.500 4938 878 141 1608 BoxColFill
4938 878 N
0 1607 V
140 0 V
0 -1607 V
-140 0 V
Z stroke
0.500 5500 878 142 1453 BoxColFill
5500 878 N
0 1452 V
141 0 V
0 -1452 V
-141 0 V
Z stroke
0.500 6063 878 141 1393 BoxColFill
6063 878 N
0 1392 V
140 0 V
0 -1392 V
-140 0 V
Z stroke
1071 4270 M
0 36 V
-31 -36 R
62 0 V
-62 36 R
62 0 V
1633 2238 M
0 49 V
-31 -49 R
62 0 V
-62 49 R
62 0 V
532 -15 R
0 27 V
-31 -27 R
62 0 V
-62 27 R
62 0 V
531 -267 R
0 30 V
-31 -30 R
62 0 V
-62 30 R
62 0 V
532 -26 R
0 48 V
-31 -48 R
62 0 V
-62 48 R
62 0 V
531 1501 R
0 20 V
-31 -20 R
62 0 V
-62 20 R
62 0 V
4446 2524 M
0 6 V
-31 -6 R
62 0 V
-62 6 R
62 0 V
531 -48 R
0 6 V
-31 -6 R
62 0 V
-62 6 R
62 0 V
531 -195 R
0 74 V
-31 -74 R
62 0 V
-62 74 R
62 0 V
532 -99 R
0 4 V
-31 -4 R
62 0 V
-62 4 R
62 0 V
% End plot #1
% Begin plot #2
stroke
LTb
0.00 0.62 0.45 C /Helvetica findfont 200 scalefont setfont
0.500 1141 878 142 3436 BoxColFill
1141 878 N
0 3435 V
141 0 V
0 -3435 V
-141 0 V
Z stroke
0.500 1704 878 141 1387 BoxColFill
1704 878 N
0 1386 V
140 0 V
0 -1386 V
-140 0 V
Z stroke
0.500 2266 878 142 1424 BoxColFill
2266 878 N
0 1423 V
141 0 V
0 -1423 V
-141 0 V
Z stroke
0.500 2829 878 141 1192 BoxColFill
2829 878 N
0 1191 V
140 0 V
0 -1191 V
-140 0 V
Z stroke
0.500 3391 878 142 1211 BoxColFill
3391 878 N
0 1210 V
141 0 V
0 -1210 V
-141 0 V
Z stroke
0.500 3953 878 142 2729 BoxColFill
3953 878 N
0 2728 V
141 0 V
0 -2728 V
-141 0 V
Z stroke
0.500 4516 878 141 1665 BoxColFill
4516 878 N
0 1664 V
140 0 V
0 -1664 V
-140 0 V
Z stroke
0.500 5078 878 142 1588 BoxColFill
5078 878 N
0 1587 V
141 0 V
0 -1587 V
-141 0 V
Z stroke
0.500 5641 878 141 1472 BoxColFill
5641 878 N
0 1471 V
140 0 V
0 -1471 V
-140 0 V
Z stroke
0.500 6203 878 142 1407 BoxColFill
6203 878 N
0 1406 V
141 0 V
0 -1406 V
-141 0 V
Z stroke
1212 4298 M
0 31 V
-31 -31 R
62 0 V
-62 31 R
62 0 V
1774 2236 M
0 56 V
-31 -56 R
62 0 V
-62 56 R
62 0 V
531 -7 R
0 31 V
-31 -31 R
62 0 V
-62 31 R
62 0 V
532 -262 R
0 30 V
-31 -30 R
62 0 V
-62 30 R
62 0 V
531 -24 R
0 55 V
-31 -55 R
62 0 V
-62 55 R
62 0 V
532 1482 R
0 19 V
-31 -19 R
62 0 V
-62 19 R
62 0 V
4586 2540 M
0 5 V
-31 -5 R
62 0 V
-62 5 R
62 0 V
532 -103 R
0 47 V
-31 -47 R
62 0 V
-62 47 R
62 0 V
531 -177 R
0 75 V
-31 -75 R
62 0 V
-62 75 R
62 0 V
531 -104 R
0 2 V
-31 -2 R
62 0 V
-62 2 R
62 0 V
% End plot #2
% Begin plot #3
stroke
LTb
0.34 0.71 0.91 C /Helvetica findfont 200 scalefont setfont
0.500 1282 878 141 2690 BoxColFill
1282 878 N
0 2689 V
140 0 V
0 -2689 V
-140 0 V
Z stroke
0.500 1844 878 142 1076 BoxColFill
1844 878 N
0 1075 V
141 0 V
0 -1075 V
-141 0 V
Z stroke
0.500 2407 878 141 1097 BoxColFill
2407 878 N
0 1096 V
140 0 V
0 -1096 V
-140 0 V
Z stroke
0.500 2969 878 142 854 BoxColFill
2969 878 N
0 853 V
141 0 V
0 -853 V
-141 0 V
Z stroke
0.500 3532 878 141 868 BoxColFill
3532 878 N
0 867 V
140 0 V
0 -867 V
-140 0 V
Z stroke
0.500 4094 878 142 3103 BoxColFill
4094 878 N
0 3102 V
141 0 V
0 -3102 V
-141 0 V
Z stroke
0.500 4656 878 142 2138 BoxColFill
4656 878 N
0 2137 V
141 0 V
0 -2137 V
-141 0 V
Z stroke
0.500 5219 878 142 2089 BoxColFill
5219 878 N
0 2088 V
141 0 V
0 -2088 V
-141 0 V
Z stroke
0.500 5781 878 142 1917 BoxColFill
5781 878 N
0 1916 V
141 0 V
0 -1916 V
-141 0 V
Z stroke
0.500 6344 878 141 1922 BoxColFill
6344 878 N
0 1921 V
140 0 V
0 -1921 V
-140 0 V
Z stroke
1352 3555 M
0 25 V
-31 -25 R
62 0 V
-62 25 R
62 0 V
1915 1939 M
0 29 V
-31 -29 R
62 0 V
-62 29 R
62 0 V
531 -6 R
0 24 V
-31 -24 R
62 0 V
-62 24 R
62 0 V
531 -266 R
0 22 V
-31 -22 R
62 0 V
-62 22 R
62 0 V
532 -16 R
0 39 V
-31 -39 R
62 0 V
-62 39 R
62 0 V
531 2166 R
0 97 V
-31 -97 R
62 0 V
-62 97 R
62 0 V
4727 3010 M
0 10 V
-31 -10 R
62 0 V
-62 10 R
62 0 V
531 -84 R
0 59 V
-31 -59 R
62 0 V
-62 59 R
62 0 V
532 -211 R
0 21 V
-31 -21 R
62 0 V
-62 21 R
62 0 V
531 -29 R
0 45 V
-31 -45 R
62 0 V
-62 45 R
62 0 V
% End plot #3
stroke
LTb
LCb setrgbcolor
1.000 UL
LTB
LCb setrgbcolor
860 4799 N
860 878 L
5765 0 V
0 3921 V
-5765 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1
